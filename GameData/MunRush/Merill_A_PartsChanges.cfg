// Changes to stock parts to rebalance tech tree
//
// Powered by ialdabaoth and sarbian's ModuleManager


// **** rcs thrusters ****

// O-10 MonoPropellant Engine
@PART[omsEngine]
{
	@TechRequired = precisionEngineering
	@category = Engine
	@title = O-10 Hypergolic Engine
	@mass = 0.10
	@PhysicsSignificance = 0
	
	@MODULE[ModuleEngines*]
	{
		//@maxThrust = 20
		@minThrust = 0 //it can be shut down by throttle
		// includes reverting ISP values to pre-0.24 stock
		@atmosphereCurve
		{
			@key,0 = 0 280
			@key,1 = 1 200
			key = 7 0.01
		}
	}
	
	MODULE
	{
		name = BTSMModuleThrustCorrecter

		zeroIspAtPressureDesc = 7.0
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	RESOURCE
	{
		name = Complexity
		amount = 100
		maxAmount = 100
	}
}

@PART[RCSBlock]
{
	RESOURCE
	{
		name = Complexity
		amount = 100
		maxAmount = 100
	}
}

// to be constitent with the EXPERIMENTAL part, 
// and to push people to pay attention to rcs placement, using this more-difficult-to-place rcs
// Place-Anywhere 7 Linear RCS Port
@PART[linearRcs]
{
	@MODULE[ModuleRCS]
	{

		!atmosphereCurve
		{
		}

		// stock curve for reference
		//atmosphereCurve
 		//{
   		//	key = 0 260
  		//	key = 1 100
 		//}

		// reducing overall ISP to make fuel conservation more of a concern and
		// reducing effectiveness in atmosphere significantly for balance with fins and thrust vectoring
		// Merill: improve to encourage people to use it (and to use it as maneuver-correction thruster)
		atmosphereCurve
	 	{
   			key = 0 210
  			key = 1 10
			key = 2 0.01
 		}
	}
	RESOURCE
	{
		name = Complexity
		amount = 100
		maxAmount = 100
	}
}

+PART[linearRcs]
{
	@name = MerillLinearRcsExperimental
	@author = Merill

	@TechRequired = unassigned

	@entryCost = 0
	@cost = 300
	
	@title = Place-Anywhere 7 Linear RCS Port (Experimental)
	@description = For every space that really needs an heavy an efficient RCS thruster, Reaction Systems Ltd intend to cover you with its new Place-Anywhere 7 Linear RCS Port! This thruster is still in development, the available power is still disappointing.

	// --- standard part parameters ---
	@mass = 0.05
	
	@MODULE[ModuleRCS]
	{
		@thrusterPower = 3
		
		!atmosphereCurve
		{
		}
		atmosphereCurve
	 	{
   			key = 0 200
  			key = 1 10
			key = 2 0.01
 		}
	}
}

+PART[smallRadialEngine]
{
	@name = MerillSmallRadialEngineExp
	@author = Merill

	@TechRequired = unassigned
	@category = Engine

	@entryCost = 0
	@cost = 600

	@title = Experimental Rockomax 24-77 
	@description = Small propellers ! We thought it might be useful for landing. We didn't have much time to finish it : it can start only twice and the power has been limited too for non-understandable security reasons
	
	@mass = 0.175 //2 //stock 0.09

	//@fx_exhaustFlame_white_tiny = 0.0, -0.075, -0.3, 0.0, 1.0, 0.0, running_notfail
	fx_exhaustFlame_blue_small = 0.0, -0.275, -0.0, 0.0, 1.0, -0.10, running_notfail
	fx_exhaustLight_blue = 0.0, -0.275, -0.0, 0.0, 0.0, 1.0, running_notfail
	fx_smokeTrail_light  = 0.0, -0.275, -0.0, 0.0, 1.0, -0.10, running

	!MODULE[ModuleEnginesFX]{}
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 5
		maxThrust = 16
		heatProduction = 300
		fxOffset = 0, 0, 0.01
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve
	 	{
   			key = 0 310
  			key = 1 250
			key = 2 0.01
 		}
		
	}
	
	//@MODULE[ModuleEngines*]
	//{
		// @minThrust = 5
		// @maxThrust = 16 //stock 20
		// @heatProduction = 200
		// !atmosphereCurve
		// {
		// }
		// atmosphereCurve
	 	// {
   			// key = 0 310
  			// key = 1 250
			// key = 2 0.01
 		// }
	// }

	// osef the "test part" mission
	//!MODULE[ModuleTestSubject]{}

	MODULE
	{
		name = MerillEngineFail
	}
	RESOURCE
	{
		name = EngineIgniter
		amount = 2
		maxAmount = 2
	}

	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	RESOURCE
	{
		name = Complexity
		amount = 200
		maxAmount = 200
	}
}

// Sepratron I
@PART[sepMotor1]
{

	// 1.5 or/to 2 time worst t/r
	@mass = 0.025
	
	//a bit more fuel
	@RESOURCE[SolidFuel]
	{
		@amount = 10
		@maxAmount = 10
	}
	
	//but better thrust&isp:  can be use  more easily as retro-burn
	@MODULE[ModuleEngines]
	{
		@maxThrust = 24
		@atmosphereCurve
		{
			@key,0 = 0 150
			@key,1 = 1 140
			key = 5 0.01
		}
	}
}


// Mk666 Pod : add life support
//@PART[Tantares_Orbital_A]
//{
//	@TechRequired = unassigned
//}
+PART[Tantares_Orbital_A]
{
	@name = MerillTantaresOrbitalAExp
	rescaleFactor = 1.8 //1.8 is better
	@TechRequired = unassigned
	@category = Pods
	@mass = 6.2	//5.2	// obj : 6,2 -> 7,1
	@cost = 4300
	@title = Mk-666 Orbital balloon
	@description = Our division like balloons. Enjoy our balloon-shaped pod! We specialy reinforced it with hardened high density steel to withstand nasty space microballs while keeping the air inside. It comes without a heat shield, that being an unnecessary and cumbersome function: You can use more booster instead.
	@maxTemp = 1250
	
	@crashTolerance = 20 // stock 10 / to be more on par with the "reinforce steel" / mk2 is 45
	
	@CrewCapacity = 2
	MODULE
	{
		name = ModuleCommand
		minimumCrew = 2
	}
	
	MODULE
	{
		name = BTSMModuleLifeSupport
		// CF SPREADSHEET
		energyConsumedRate = 0.20625 // 7.5 / 0.22 8X stock core (0.02777778 rounded to 0.0275) x7.5 mk2, x10 mk1 & 2 man 2 can
		lifeSupportConsumedRate = 0.8 //0.5 mk2, 1.25 2man2can
	}

	RESOURCE
	{
		name = LifeSupport
		//amount = 45000 // 1* 4h x 2Kerbal = 57600 (need at least 1t from KEG) CF SPREADSHEET
		amount = 60000 //don't need a keg if using the real lander -> push mass to 6t
		maxAmount = 60000
	}

	!MODULE[ModuleReactionWheel]
	{
	}
	
	!MODULE[ModuleSAS]
	{
	}
	
//	@RESOURCE[ElectricCharge]
//	{
//		@amount = 600 // 300 on mk1-2
//		@maxAmount = 600
//	}
	
// no, too easy/powerfull
//	RESOURCE
//	{
//		name = MonoPropellant
//		amount = 50
//		maxAmount = 50
//	}

// add btsm science module
	@MODULE[ModuleScienceExperiment]
	{
		@name = BTSMModuleCrewReport

		@useActionGroups = False
		@hideUIwhenUnavailable = False
	}

	MODULE
	{
		name = BTSMModuleScienceZoneDisplay
		displayBiome = True
	}

	MODULE
	{
		name = BTSMModuleCrewPassage
	}

	MODULE
	{
		name = BTSMModulePressureRated
	}	
	RESOURCE
	{
		name = ScienceSlot
		amount = 1
		maxAmount = 1
	}
	RESOURCE
	{
		name = Complexity
		amount = 4000
		maxAmount = 4000
	}
}

// Mk1-2 Command Pod
@PART[Mark1-2Pod]
{
	
	@mass = 3.585 // stock = 4 / btsm = 3.885, adjusted due to life support requirements -> 5.22

	@MODULE[BTSMModuleLifeSupport]
	{
		energyConsumedRate = 0.20625 // 7.5X stock core (0.02777778 rounded to 0.0275)
		lifeSupportConsumedRate = 0.5 
	}

	//revalorisation package
	@MODULE[BTSMModuleReactionWheel]
	{	
		@PitchTorque = 0.5 // 15 default
		@YawTorque = 0.5   // 15 default
		@RollTorque = 0.5  // 15 default
	
		@RESOURCE[ElectricCharge]
		{
			@rate = 0.5 // default 1.2
		}
	}

	//more room for kerbin re-entry (and balance vs 2m2C)
	@RESOURCE[ElectricCharge]
	{
		@amount = 800 // 150 default / 300 btsm
		@maxAmount = 800 
	}
	
	@RESOURCE[MonoPropellant]
	{
		@amount = 50 // 30 default
		@maxAmount = 50 
	}
	
	//add landing radar: useful with propulsive landing
	MODULE
	{
		name = BTSMModuleRadarAltimeter
	}
	//with 3, a fly-by can gather pic and other science thing (if not already taken)
	RESOURCE
	{
		name = ScienceSlot
		amount = 3
		maxAmount = 3
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}

// Mk1 Pod : add life support
//TODO: add tweakable heat shield
@PART[mk1pod]
{
	@mass = 1.9 //btsm 2.4
	
	//btsm : 20k
	@RESOURCE[LifeSupport]
	{
		@amount = 25000 //1h10(20k) -> 1h45(30k) -> 2h20(40k)
		@maxAmount = 25000
	}
	RESOURCE
	{
		name = Complexity
		amount = 6000
		maxAmount = 6000
	}
}

// Mk2 Lander-can : it's ligh, have a decent life support unit, fairly efficient life support storage : too good!
@PART[mk2LanderCabin]
{
	//reduce size (big vs mk1-2 or mk1 pod)
	@rescaleFactor = 0.9
	@mass = 0.915 //0.805->50monoprop // btsm:0.8 -> 2,22; changed to get 2,25
	
	!RESOURCE[ElectricCharge]{}
	
	//btsm : // 10X stock core (0.02777778 rounded to 0.0275)
	@MODULE[BTSMModuleLifeSupport]
	{
		energyConsumedRate = 0.33 // 12X stock core (because it's too powerfull with external life support)
	}
	
	@RESOURCE[LifeSupport]
	{
		@amount = 17000 //from 18000 (0,72 klf/t)
		@maxAmount = 17000
	}
	//50 btsm (0,2t)
	@RESOURCE[MonoPropellant]
	{
		@amount = 20 //20=0.08t
		@maxAmount = 20
	}
	// FIXME: possible exploit: fly-by with 3 2m2c => 3 shots in 1 travel, for cheap (no elec consumption, different science slot location)
	// keep it at 1, to prevent exploit when using this to host plenty of exp for free with only 1 probe
	// TODO: link electric consuption to science slot (-> consume some elec for each science slot even if probe/lifeSupport is "disabled")
	RESOURCE
	{
		name = ScienceSlot
		amount = 1
		maxAmount = 1
	}
	RESOURCE
	{
		name = Complexity
		amount = 4000
		maxAmount = 4000
	}
}

//life support container OLD(in modular design - actuators) NEW=> in precision to make this node more relevant for manned flight
// 1k = 0.5t
+PART[BTSMLifeSupportStorage1]
{
	@name = MerillLifeSupportStorage1Experimental
	@title = KEG-200 External Life Support Storage Unit
	@rescaleFactor = 0.5
	// todo: concatenate to remove copy/paste copyrighted text
	@description = Frustrated at not being able to attach additional life support and/or beverages to your spacecraft and/or pleasure boats?  Angst no more!  These handy and well insulated units will ensure that no matter how long your voyage, your drinks will stay frosty, while hungry sailors and party goers alike will stay well provisioned!  Note: This part is still experimental. We  doubly protected it in a quadruple shell of titanated titanium to have a good margin of error.
	@mass = 0.3 //0.7
	//0.3 t of life support
	@RESOURCE[LifeSupport]
	{
		@amount = 20000
		@maxAmount = 20000
	}
	
	//like unassigned (strangly not set correctly, perhaps because it's a copy?)
	@TechRequired = specializedControl
}

//**** other pod : add complexity ****

// 
@PART[BTSMCockpit1]
{
	RESOURCE
	{
		name = Complexity
		amount = 10000
		maxAmount = 10000
	}
}
@PART[BTSMCockpit2]
{
	RESOURCE
	{
		name = Complexity
		amount = 10000
		maxAmount = 10000
	}
}

//change mass limit stubs
@PART[BTSMTechStubLaunchLimit3]
{
	@mass = 200
}

@PART[BTSMTechStubLaunchLimit4]
{
	@mass = 650
}

+PART[BTSMTechStubLaunchLimit3]
{
	@name = BTSMTechStubLaunchLimit2_400_specializedConstruction
	@mass = 300
	@TechRequired = specializedConstruction
}
+PART[BTSMTechStubLaunchLimit3]
{
	@name = BTSMTechStubLaunchLimit2_400_precisionEngineering
	@mass = 275
	@TechRequired = precisionEngineering
}
+PART[BTSMTechStubLaunchLimit3]
{
	@name = BTSMTechStubLaunchLimit3_500_heavierRocketry
	@mass = 350
	@TechRequired = heavierRocketry
}

//mass of payload: to nerf it a little
@PART[BTSMCommercialPayload2]
{
	@mass = 12.5
}

//mass of heat shield : -4t to -2.5t vs propulsive reentry (950dv = 2.25t+0.5t; max mun velocity = 3400dv, max safe reentry dv=1500; prop reentry = 5t)
@PART[2.5_Heatshield]
{
	@mass = 1.5 // "stock": 0.06t of structural oO + 1t of ablative, 
}

// it's less performing (cannot support mun reentry) => less mass
@PART[1.25_Heatshield]
{
	@mass = 0.20 // "stock": 0.2t +0.25t of ablative
}

// better looking big decoupler
+PART[stackDecoupler]
{
	@name = MerillLargeStackDecoupler
	@TechRequired = specializedControl
	@cost = 600
	@mass = 0.2
	@title = TR-36B Stack Decoupler
	@description = The TR-36B Stack Decoupler is a streched verion of his little sibling. The explosive charge is really small, don't decouple big thing with this
	
	@node_stack_bottom = 0.0, -0.1329949, 0.0, 0.0, 1.0, 0.0, 2
	@node_stack_top = 0.0, 0.0650517, 0.0, 0.0, 1.0, 0.0, 2
	
	!mesh
	MODEL
	{
		model = Squad/Parts/Utility/decouplerStackTR-18A/model
		scale = 1.9, 1.0, 1.9
	}
	
	@MODULE[ModuleDecouple]
	{
		@ejectionForce = 10
	}
}


// **** engine : test & igniter limit ******

@PART[MerillSmallRadialEngineExp]
{
	RESOURCE
	{
		name = Complexity
		amount = 500
		maxAmount = 500
	}
}

// kestes-1
@PART[BTSMSolidRocket1]
{
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
}

// KESTES-1.5
@PART[BTSMSolidRocket2]
{
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
}

// LV-T15 Liquid Fuel Engine
@PART[BTSMLiquidEngine1]
{
	// Propulsion is deprecated
	@category = Engine
	//discount! (lol)
	@cost = 800 //BTSM: 850
	@mass = 1.75 //BTSM: 1.5
	
	@fx_exhaustFlame_blue = 0.0, -5.3, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -5.3, 0.0, 0.0, 0.0, 1.0, running_notfail
	//let it show, fail or not fail
	//@fx_smokeTrail_light = 0.0, -5.3, 0.0, 0.0, 1.0, 0.0, running
	
	
	@MODULE[ModuleEngines]
	{
		@minThrust = 100
		// nerf it more
		@atmosphereCurve
		{
			@key,0 = 0 350
			@key,1 = 1 300
			@key,2 = 7 0.01
		}
	}
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 1
		maxAmount = 1
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}

// LV-T30 Liquid Fuel Engine
@PART[liquidEngine]
{
	@fx_exhaustFlame_blue = 0.0, -10.3, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -10.3, 0.0, 0.0, 0.0, 1.0, running_notfail

	@mass = 1.5
	
	@MODULE[ModuleEngines]
	{
		@minThrust = 100
		@atmosphereCurve
		{
			@key,0 = 0 365
			@key,1 = 1 320
			@key,2 = 7 0.01
		}
	}
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 1
		maxAmount = 1 
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}

// LV-T45 Liquid Fuel Engine
@PART[liquidEngine2]
{
	@fx_exhaustFlame_blue = 0.0, -5.74338, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -5.74338, 0.0, 0.0, 0.0, 1.0, running_notfail

	//@mass = 1.25
	
	@MODULE[ModuleEngines]
	{
		@minThrust = 50
	}
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 3
		maxAmount = 3 
	}
	
	RESOURCE
	{
		name = Complexity
		amount = 1200
		maxAmount = 1200
	}
}

// LV-404 Liquid Fuel Engine
@PART[BTSMLiquidEngine3]
{
	// propulsion is deprecated
	@category = Engine
	//make this engine "smaller than 909"
	//NO! it's even more useless!
	mass = 0.70 //0.4 // 0.75 on btsm, 0.5 on stock LV909
	// wildcard to apply to ModuleEngines or ModuleEnginesFX
	@MODULE[ModuleEngines*]
	{
		@maxThrust = 50 //33 // btsm 50
		@minThrust = 25
	}
	
	@fx_exhaustFlame_blue_small = 0.0, -21.0, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -21.0, 0.0, 0.0, 0.0, 1.0, running_notfail
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 1
		maxAmount = 1
	}
	RESOURCE
	{
		name = Complexity
		amount = 2000
		maxAmount = 2000
	}
}

// LV-909 Liquid Fuel Engine
@PART[liquidEngine3]
{
	// wildcard to apply to ModuleEngines or ModuleEnginesFX
	@MODULE[ModuleEngines*]
	{
		//@maxThrust = 50 // stock 50
		@minThrust = 10
	}

	@fx_exhaustFlame_blue_small = 0.0, -21.0, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -21.0, 0.0, 0.0, 0.0, 1.0, running_notfail
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 3
		maxAmount = 3 
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}


// KEEL HAUL Liquid Fuel Engine
@PART[BTSMLiquidEngine1-2]
{
	//propulsion is deprecated
	@category = Engine
	//cost reduced: because with 5650, it's mostly a 6-time lvt-30 but without the isp.
	@cost = 3650 //5650
	
	@fx_exhaustFlame_blue = 0.0, -2, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -2, 0.0, 0.0, 0.0, 1.0, running_notfail
	
	@MODULE[ModuleEngines]
	{
		@minThrust = 500
	}
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 1
		maxAmount = 1
	}
	RESOURCE
	{
		name = Complexity
		amount = 2500
		maxAmount = 2500
	}
}

// Poodle Liquid Fuel Engine
@PART[liquidEngine2-2]
{
	@fx_exhaustFlame_blue_small = 0.0, -0.8, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -0.8, 0.0, 0.0, 0.0, 1.0, running_notfail
	
	@MODULE[ModuleEngines]
	{
		@maxThrust = 250
		@minThrust = 50
	}
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 3
		maxAmount = 3 
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}

// Mainsail Liquid Fuel Engine
@PART[liquidEngine1-2]
{
	@fx_exhaustFlame_blue = 0.0, -2, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -2, 0.0, 0.0, 0.0, 1.0, running_notfail

	@MODULE[ModuleEngines]
	{
		@minThrust = 500
	}
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 2
		maxAmount = 2
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}

// Skipper Liquid Fuel Engine
@PART[engineLargeSkipper]
{
	@fx_exhaustFlame_blue = 0.0, -2.2, 0.0, 0.0, 1.0, 0.0, running_notfail
	@fx_exhaustLight_blue = 0.0, -2.2, 0.0, 0.0, 0.0, 1.0, running_notfail

	@MODULE[ModuleEngines]
	{
		@minThrust = 200
	}
	
	MODULE
	{
		name = MerillEngineFail
	}
	
	MODULE
	{
		name = MerillEngineTestAtmoOnly
	}
	
	RESOURCE
	{
		name = EngineIgniter
		amount = 4
		maxAmount = 4
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}


// RT-10
@PART[solidBooster]
{
	RESOURCE
	{
		name = Complexity
		amount = 500
		maxAmount = 500
	}
	@MODULE[ModuleEngines]
	{
		@heatProduction = 300
	}
}

// BACC
@PART[solidBooster1-1]
{
	RESOURCE
	{
		name = Complexity
		amount = 500
		maxAmount = 500
	}
}

//TODO other exotic engines

// ***** other part that should be testing before using on kerbals ******

// Parachute 1
@PART[parachuteSingle]
{
	MODULE
	{
		name = MerillParachuteTest
	}
	
}
// decoupler 1.25
@PART[stackDecoupler]
{
	//MODULE
	//{
	//	name = MerillDecoupleTest
	//}
	
}

// ***** science experiment : can fail, use slot(s) *******

// 2HOT Thermometer
@PART[sensorThermometer]
{
	MODULE
	{
		name = MerillModuleScienceFail
	}
	MODULE
	{
		name = MerillModuleScienceSlot
	}
}

// PresMat Barometer
@PART[sensorBarometer]
{
	MODULE
	{
		name = MerillModuleScienceFail
	}
	MODULE
	{
		name = MerillModuleScienceSlot
	}
}

// GRAVMAX Negative Gravioli Detector
@PART[sensorGravimeter]
{
	@rescaleFactor = 2
	
	//node_stack_top = -0.0825, 0.11, 0.0, 0.0, 1.0, 0.0, 0
	//node_stack_bottom = 0.00, -0.8, -0.1, 0.0, 1.0, 0.0, 0
	
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	//@attachRules = 1,0,1,0,1

	// not usefull to make this this heavy
	//@mass = 1
	
	
	MODULE
	{
		name = MerillModuleScienceFail
	}
	MODULE
	{
		name = MerillModuleScienceSlot
	}
	
	// RESOURCE
	// {
		// name = Complexity
		// amount = 1000
		// maxAmount = 1000
	// }
	
//	MODULE
//	{
//		name = MerillModuleScienceConsumeEnergy
//		// QBE=.0825<=>3X stock core (0.02777778 rounded to 0.0275)
//		consumptionPerSecond = 0.0825
//	}
}

// Mystery Goo™ Containment Unit
@PART[GooExperiment]
{	
	@mass = 0.3 //stock : 0.15, BTSM: 0.3 
	
	//make crew mandatory : restrict science to mannd fly-by (and manned landing)
	//@MODULE[BTSMModuleScienceExperiment]
	//{
		// @dataIsCollectable = True
		//@interactionRange = 1.3 //stock: 1.2
		// @collectActionName = Retreive goo science data
	//}
	// @MODULE[ModuleScienceExperiment]
	// {
		// @experimentActionName = Expose Mystery Goo


		// @useActionGroups = False
		// @hideUIwhenUnavailable = False

		// resettable = False
		// resettableOnEVA = False
		// rerunnable = False

		// @dataIsCollectable = True
	// }
	
	//we didn't need to wait the return
	@MODULE[ModuleScienceExperiment]
	{
	    @xmitDataScalar = 1.0
	}
	// @MODULE[BTSMModuleScienceExperiment]
	// {
	    // @xmitDataScalar = 1.0
	// }
	
	//MODULE
	//{
	//	name = MerillModuleScienceFail
	//}
	MODULE
	{
		name = MerillEvaOnlyModule
	}
}

// Double-C Seismic Accelerometer
@PART[sensorAccelerometer]
{
	MODULE
	{
		name = MerillModuleScienceFail
	}
	MODULE
	{
		name = MerillModuleScienceSlot
	}
}

// Sensor Array Computing Nose Cone
@PART[avionicsNoseCone]
{
	MODULE
	{
		name = MerillModuleScienceFail
	}
	MODULE
	{
		name = MerillModuleScienceSlot
	}
}

// BTSM BTSMBiometricSensor
@PART[BTSMBiometricSensor]
{
	MODULE
	{
		name = MerillModuleScienceFail
	}
}

// SC-9001 Science Jr.
@PART[science_module]
{
	MODULE
	{
		name = MerillModuleScienceFail
	}
}


// Comms DTS-M1 : remove minmus
@PART[mediumDishAntenna]
{
	@description = Want to be able to transmit data from as far away as Mun?  Have we got the antenna for you!  The DTS-M1 is a fully deployable medium-range communications and data transmission system that has been designed to have a minimal form factor when stowed. Note: Occasional antenna tweaking and swift kicks to the main assembly may be required for optimal performance.

	@MODULE[BTSMModuleDataTransmitter]
	{
		maxRange = 15000000 // btsm : 100 000 000 , minmus: 47 000 000, mun: 12 000 000
    }
}

//TODO: test long time experiment like the scan.
//TODO: making scientifics kerbal reparing failing experiments

// ***** tester part : other command/pod *****


// ***** tester part : probe *****

@PART[probeCoreSphere]
{
	//energyConsumedRate = 0.165 // 6X stock core (0.02777778 rounded to 0.0275)
	RESOURCE
	{
		name = ScienceSlot
		amount = 2
		maxAmount = 2
	}
	RESOURCE
	{
		name = Complexity
		amount = 10000
		maxAmount = 10000
	}
}

@PART[probeCoreCube]
{
	@MODULE[BTSMModuleProbePower]
	{
		energyConsumedRate = 0.11 // 4X stock core (0.02777778 rounded to 0.0275)
		//energyConsumedRate = 0.0825 // //BTSM: 3X stock core (0.02777778 rounded to 0.0275)
	}
	RESOURCE
	{
		name = TestingInstrument
		amount = 1
		maxAmount = 1
	}
	RESOURCE
	{
		name = ScienceSlot
		amount = 4
		maxAmount = 4
	}
	RESOURCE
	{
		name = Complexity
		amount = 12000
		maxAmount = 12000
	}
}

@PART[probeCoreHex]
{
	@MODULE[BTSMModuleProbePower]
	{
		//energyConsumedRate = 0.0825 // 3X stock core (0.02777778 rounded to 0.0275)
		energyConsumedRate = 0.055 // 2X stock core (0.02777778 rounded to 0.0275)
		//energyConsumedRate = 0.04125 //BTSM: 1.5X stock core (0.02777778 rounded to 0.0275)
	}
	RESOURCE
	{
		name = TestingInstrument
		amount = 2
		maxAmount = 2
	}
	RESOURCE
	{
		name = ScienceSlot
		amount = 6
		maxAmount = 6
	}
	RESOURCE
	{
		name = Complexity
		amount = 5000
		maxAmount = 5000
	}
}

@PART[probeCoreOcto]
{
	RESOURCE
	{
		name = TestingInstrument
		amount = 4
		maxAmount = 4
	}
	RESOURCE
	{
		name = ScienceSlot
		amount = 8
		maxAmount = 8
	}
	RESOURCE
	{
		name = Complexity
		amount = 1000
		maxAmount = 1000
	}
}

@PART[probeCoreOcto2]
{
	RESOURCE
	{
		name = TestingInstrument
		amount = 10
		maxAmount = 10
	}
	RESOURCE
	{
		name = ScienceSlot
		amount = 8
		maxAmount = 8
	}
}

@PART[probeStackSmall]
{
	RESOURCE
	{
		name = TestingInstrument
		amount = 10
		maxAmount = 10
	}
	RESOURCE
	{
		name = ScienceSlot
		amount = 8
		maxAmount = 8
	}
}

@PART[probeStackLarge]
{
	RESOURCE
	{
		name = TestingInstrument
		amount = 10
		maxAmount = 10
	}
	RESOURCE
	{
		name = ScienceSlot
		amount = 8
		maxAmount = 8
	}
}

// ****** RCS ******

// make it better, like the tiny
@PART[radialRCSTank]
{
	@mass = 0.08
	
	@RESOURCE[MonoPropellant]
	{
		@amount = 80 // 60 default (4.2:1 => 5:1)
		@maxAmount = 80
	}
}

//make it more relevant (better than the tiny, less than small)
@PART[rcsTankRadialLong]
{
	@mass = 0.16
	
	@RESOURCE[MonoPropellant]
	{
		@amount = 185 // 150 default (5:1 => 6:1)
		@maxAmount = 185
	}
}

//big rcs is too good
@PART[RCSTank1-2]
{
	@mass = 0.5 //from 0.4 , wet = 3.7
	@RESOURCE[MonoPropellant]
	{
		@amount = 800 // 750(3+0.4/0.4) default (9.3:1 => 7.4:1) 800(3.2+0.5/0.5)
		@maxAmount = 800
	}
}

// ***** battery *****
//more diff in price

//50 ec
@PART[BTSMBatteryPack1]
{
	@cost = 150 // 3:1 //btsm: 80
}

//400 ce
@PART[BTSMBatteryPack2]
{
	@cost = 1000 //2.5:1  //btsm: 550 
}

//600 ec
@PART[MerillBattery2_5]
{
	@cost = 1200 //2:1
}

//BTSMbat3 : 1000/800 => 1,25

// **** fuel tanks *****

@PART[fuelTankSmallFlat]
{
	@maxTemp = 1450
}
@PART[BTSMXLFuelTankOct-2]
{
	@maxTemp = 1450
}

@PART[fuelTank3-2]
{
	@title = Rockomax X200-64 Jumbo Fuel Tank
}

+PART[fuelTank3-2]
{
	@name = MerillCheapFuelTank3-2
	@TechRequired = unassigned
	@title = Rockomax X200-64 Cheap Fuel Tank
	@description = The largest tank available from Rockomax, the Jumbo-64 holds a vast amount of fuel in a friendly orange insulated container. Special version for your mission to the moon, cheaper but a little heavier.
	
	@cost = 4200 //stock : 6400, (with 3k2 fuel)
	@mass = 6
	
	//stock bp: 3200, here bp : 1000 => diff of 2200
	//can't because bug
	RESOURCE
	{
		name = Complexity
		amount = 800 // make it easier to build, but not 3 time, 2 time are ok
		maxAmount = 800
	}
	
	//to conterract the bug ( and it's cheap anyway)
	MODULE
	{
		name = BTSMModulePressureRated
	}	
}
// +PART[fuelTank3-2]
// {
	// @name = test3
	// @title = test3
	// RESOURCE
	// {
		// name = MonoPropellant
		// amount = 80
		// maxAmount = 80
	// }
// }
// +PART[fuelTank1-2]
// {
	// @name = MerillCheapFuelTank1-2
	// @TechRequired = unassigned
	// @title = Cheap Rockomax X200-32 Fuel Tank
	// @description = Special version of our bestselling X200-32 for your mission. ps: mass increased slightly for cost optimisation.
	
	// @cost = 2000 //stock : 3200, (with 1k6 fuel)
	// @mass = 3
	// RESOURCE
	// {
		// name = Complexity
		// amount = 1200
		// maxAmount = 1200
	// }
// }

// 1.875 tank parts from 2t, 4t, 8t, 16t
@PART[1875F12FuelTank]
{
	@cost = 400
}

@PART[1875F25FuelTank]
{
	@cost = 800
}

@PART[1875F50FuelTank]
{
	@cost = 1600
}

@PART[1875F100FuelTank]
{
	@cost = 3200
}

@PART[1875F-FLFuelTank]
{
	@cost = 500
}

@PART[1875F-RXFuelTank]
{
	@cost = 1100
}

//********************** others ************************

@PART[1875Decoupler]
{
}

@PART[1875StackSep]
{
//	@cost = 470;
}

